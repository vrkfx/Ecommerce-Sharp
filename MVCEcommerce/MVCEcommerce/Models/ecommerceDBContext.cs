// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace MVCEcommerce.Models
{
    public partial class ecommerceDBContext : DbContext
    {
        public ecommerceDBContext()
        {
        }

        public ecommerceDBContext(DbContextOptions<ecommerceDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Address> Address { get; set; }
        public virtual DbSet<Category> Category { get; set; }
        public virtual DbSet<Customer> Customer { get; set; }
        public virtual DbSet<CustomerOrder> CustomerOrder { get; set; }
        public virtual DbSet<Product> Product { get; set; }
        public virtual DbSet<ProductInOrder> ProductInOrder { get; set; }
        public virtual DbSet<Review> Review { get; set; }
        public virtual DbSet<Users> Users { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Address>(entity =>
            {
                entity.Property(e => e.addressID).ValueGeneratedNever();

                entity.Property(e => e.addressLine)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.country)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.region)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.suburb)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Category>(entity =>
            {
                entity.Property(e => e.categoryID).ValueGeneratedNever();

                entity.Property(e => e.categoryName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Customer>(entity =>
            {
                entity.Property(e => e.customerID).ValueGeneratedNever();

                entity.Property(e => e.email)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.firstName)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.lastName)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.phoneNumber)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CustomerOrder>(entity =>
            {
                entity.HasKey(e => e.orderID)
                    .HasName("PK__Customer__0809337D2BC773CB");

                entity.Property(e => e.orderID).ValueGeneratedNever();

                entity.Property(e => e.datePaid).HasColumnType("date");

                entity.Property(e => e.orderDate).HasColumnType("date");
            });

            modelBuilder.Entity<Product>(entity =>
            {
                entity.Property(e => e.productID).ValueGeneratedNever();

                entity.Property(e => e.productCost).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.productDescription)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.productImage)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.productName)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ProductInOrder>(entity =>
            {
                entity.HasKey(e => new { e.orderID, e.productID })
                    .HasName("PK__ProductI__BAD83E69BD2F65C0");

                entity.Property(e => e.totalItemCost).HasColumnType("decimal(10, 2)");
            });

            modelBuilder.Entity<Review>(entity =>
            {
                entity.Property(e => e.reviewID).ValueGeneratedNever();

                entity.Property(e => e.reviewDate).HasColumnType("date");

                entity.Property(e => e.reviewDescription)
                    .IsRequired()
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Users>(entity =>
            {
                entity.HasKey(e => e.userID)
                    .HasName("PK__Users__CB9A1CFFB55F5CF0");

                entity.Property(e => e.password)
                    .IsRequired()
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.userName)
                    .IsRequired()
                    .HasMaxLength(80)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}